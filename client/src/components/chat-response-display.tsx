import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { MessageSquare, Bot, Clock } from "lucide-react";
import type { Analysis } from "@shared/schema";

interface ChatResponseDisplayProps {
  analysis: Analysis;
}

export default function ChatResponseDisplay({ analysis }: ChatResponseDisplayProps) {
  const rawAnalysis = analysis.analysisData?.rawAnalysis;
  
  if (!rawAnalysis) {
    return null;
  }

  // Extract the content from the raw analysis
  const getChatContent = () => {
    try {
      const parsedResponse = JSON.parse(rawAnalysis.fullResponse);
      
      // Try to get the message content from various possible structures
      if (parsedResponse.choices && parsedResponse.choices[0]?.message?.content) {
        return parsedResponse.choices[0].message.content;
      }
      
      // Try alternative structure
      if (parsedResponse.message && parsedResponse.message.content) {
        return parsedResponse.message.content;
      }
      
      // Try direct content
      if (parsedResponse.content) {
        return parsedResponse.content;
      }
      
      // If it's already a string, return it
      if (typeof parsedResponse === 'string') {
        return parsedResponse;
      }
      
      return "No readable content found in the response.";
    } catch (error) {
      console.error('Error parsing chat response:', error);
      return "Error parsing the AI response.";
    }
  };

  const formatTimestamp = (timestamp: string) => {
    return new Date(timestamp).toLocaleString();
  };

  const chatContent = getChatContent();

  return (
    <Card className="shadow-lg">
      <CardContent className="p-8">
        <div className="flex items-center justify-between mb-6">
          <h4 className="text-xl font-semibold text-dark-grey flex items-center">
            <MessageSquare className="w-5 h-5 text-trust-blue mr-2" />
            AI Health Assessment
          </h4>
          <div className="flex items-center space-x-2">
            <Badge variant="outline" className="text-trust-blue border-trust-blue">
              <Bot className="w-3 h-3 mr-1" />
              OpenAI GPT-4o
            </Badge>
            <Badge variant="outline" className="text-gray-600">
              <Clock className="w-3 h-3 mr-1" />
              {formatTimestamp(rawAnalysis.responseTime)}
            </Badge>
          </div>
        </div>
        
        <div className="bg-gradient-to-r from-blue-50 to-green-50 rounded-lg p-6 border border-gray-200">
          <div className="prose prose-sm max-w-none">
            <div className="text-gray-800 whitespace-pre-wrap leading-relaxed">
              {chatContent}
            </div>
          </div>
        </div>
        
        <div className="mt-4 p-3 bg-blue-50 rounded-lg">
          <p className="text-sm text-gray-700">
            <MessageSquare className="w-4 h-4 text-trust-blue mr-2 inline" />
            This analysis is generated by OpenAI's GPT-4o vision model based on your uploaded image. 
            The AI provides personalized health insights using advanced computer vision and medical knowledge.
          </p>
        </div>
      </CardContent>
    </Card>
  );
}